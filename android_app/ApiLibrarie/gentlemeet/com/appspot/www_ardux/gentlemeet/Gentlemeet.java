/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-15 19:10:39 UTC)
 * on 2014-05-24 at 21:04:27 UTC 
 * Modify at your own risk.
 */

package com.appspot.www_ardux.gentlemeet;

/**
 * Service definition for Gentlemeet (v1).
 *
 * <p>
 * Backend API for managing rooms and meetings with GentleMeet
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="http://docs.gentlemeet.com" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GentlemeetRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Gentlemeet extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the GentleMeet API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www-ardux.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "gentlemeet/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Gentlemeet(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Gentlemeet(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Device collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Device.List request = gentlemeet.device().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Device device() {
    return new Device();
  }

  /**
   * The "device" collection of methods.
   */
  public class Device {

    /**
     * Create a request for the method "device.get".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param uuidQuery
     * @return the request
     */
    public Get get(java.lang.String uuidQuery) throws java.io.IOException {
      Get result = new Get(uuidQuery);
      initialize(result);
      return result;
    }

    public class Get extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceDevice> {

      private static final String REST_PATH = "device/{uuid_query}";

      /**
       * Create a request for the method "device.get".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param uuidQuery
       * @since 1.13
       */
      protected Get(java.lang.String uuidQuery) {
        super(Gentlemeet.this, "GET", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ResourceDevice.class);
        this.uuidQuery = com.google.api.client.util.Preconditions.checkNotNull(uuidQuery, "Required parameter uuidQuery must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("uuid_query")
      private java.lang.String uuidQuery;

      /**

       */
      public java.lang.String getUuidQuery() {
        return uuidQuery;
      }

      public Get setUuidQuery(java.lang.String uuidQuery) {
        this.uuidQuery = uuidQuery;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "device.insert".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDevice}
     * @return the request
     */
    public Insert insert(com.appspot.www_ardux.gentlemeet.model.ResourceDevice content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceDevice> {

      private static final String REST_PATH = "device";

      /**
       * Create a request for the method "device.insert".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDevice}
       * @since 1.13
       */
      protected Insert(com.appspot.www_ardux.gentlemeet.model.ResourceDevice content) {
        super(Gentlemeet.this, "POST", REST_PATH, content, com.appspot.www_ardux.gentlemeet.model.ResourceDevice.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "device.patch".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param uuidQuery
     * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId}
     * @return the request
     */
    public Patch patch(java.lang.String uuidQuery, com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId content) throws java.io.IOException {
      Patch result = new Patch(uuidQuery, content);
      initialize(result);
      return result;
    }

    public class Patch extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceDevice> {

      private static final String REST_PATH = "device/{uuid_query}";

      /**
       * Create a request for the method "device.patch".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param uuidQuery
       * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId}
       * @since 1.13
       */
      protected Patch(java.lang.String uuidQuery, com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId content) {
        super(Gentlemeet.this, "PATCH", REST_PATH, content, com.appspot.www_ardux.gentlemeet.model.ResourceDevice.class);
        this.uuidQuery = com.google.api.client.util.Preconditions.checkNotNull(uuidQuery, "Required parameter uuidQuery must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("uuid_query")
      private java.lang.String uuidQuery;

      /**

       */
      public java.lang.String getUuidQuery() {
        return uuidQuery;
      }

      public Patch setUuidQuery(java.lang.String uuidQuery) {
        this.uuidQuery = uuidQuery;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "device.update".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param uuidQuery
     * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId}
     * @return the request
     */
    public Update update(java.lang.String uuidQuery, com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId content) throws java.io.IOException {
      Update result = new Update(uuidQuery, content);
      initialize(result);
      return result;
    }

    public class Update extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceDevice> {

      private static final String REST_PATH = "device/{uuid_query}";

      /**
       * Create a request for the method "device.update".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param uuidQuery
       * @param content the {@link com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId}
       * @since 1.13
       */
      protected Update(java.lang.String uuidQuery, com.appspot.www_ardux.gentlemeet.model.ResourceDeviceProtoNameResourceId content) {
        super(Gentlemeet.this, "PUT", REST_PATH, content, com.appspot.www_ardux.gentlemeet.model.ResourceDevice.class);
        this.uuidQuery = com.google.api.client.util.Preconditions.checkNotNull(uuidQuery, "Required parameter uuidQuery must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("uuid_query")
      private java.lang.String uuidQuery;

      /**

       */
      public java.lang.String getUuidQuery() {
        return uuidQuery;
      }

      public Update setUuidQuery(java.lang.String uuidQuery) {
        this.uuidQuery = uuidQuery;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Devices collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Devices.List request = gentlemeet.devices().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Devices devices() {
    return new Devices();
  }

  /**
   * The "devices" collection of methods.
   */
  public class Devices {

    /**
     * Create a request for the method "devices.list".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceDeviceCollection> {

      private static final String REST_PATH = "devices";

      /**
       * Create a request for the method "devices.list".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Gentlemeet.this, "GET", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ResourceDeviceCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /**

       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long limit;

      /**

       */
      public java.lang.Long getLimit() {
        return limit;
      }

      public List setLimit(java.lang.Long limit) {
        this.limit = limit;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String order;

      /**

       */
      public java.lang.String getOrder() {
        return order;
      }

      public List setOrder(java.lang.String order) {
        this.order = order;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Event collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Event.List request = gentlemeet.event().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Event event() {
    return new Event();
  }

  /**
   * The "event" collection of methods.
   */
  public class Event {

    /**
     * Checks a user out of a meeting. If there is not a logged in user throws an exception. If the
     * event doesn't exists throws an exception. If the user has already checked out throws an
     * exception. If the user hasn't checked in throws an exception.
     *
     * Create a request for the method "event.checkOut".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link CheckOut#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public CheckOut checkOut(java.lang.Integer id) throws java.io.IOException {
      CheckOut result = new CheckOut(id);
      initialize(result);
      return result;
    }

    public class CheckOut extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesCheckInOutMessage> {

      private static final String REST_PATH = "event/{id}/checkOut";

      /**
       * Checks a user out of a meeting. If there is not a logged in user throws an exception. If the
       * event doesn't exists throws an exception. If the user has already checked out throws an
       * exception. If the user hasn't checked in throws an exception.
       *
       * Create a request for the method "event.checkOut".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link CheckOut#execute()} method to invoke the remote operation.
       * <p> {@link
       * CheckOut#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected CheckOut(java.lang.Integer id) {
        super(Gentlemeet.this, "POST", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesCheckInOutMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public CheckOut setAlt(java.lang.String alt) {
        return (CheckOut) super.setAlt(alt);
      }

      @Override
      public CheckOut setFields(java.lang.String fields) {
        return (CheckOut) super.setFields(fields);
      }

      @Override
      public CheckOut setKey(java.lang.String key) {
        return (CheckOut) super.setKey(key);
      }

      @Override
      public CheckOut setOauthToken(java.lang.String oauthToken) {
        return (CheckOut) super.setOauthToken(oauthToken);
      }

      @Override
      public CheckOut setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CheckOut) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CheckOut setQuotaUser(java.lang.String quotaUser) {
        return (CheckOut) super.setQuotaUser(quotaUser);
      }

      @Override
      public CheckOut setUserIp(java.lang.String userIp) {
        return (CheckOut) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public CheckOut setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public CheckOut set(String parameterName, Object value) {
        return (CheckOut) super.set(parameterName, value);
      }
    }
    /**
     * Mark an event as finished and set the actual end time as right now. If there is not a logged in
     * user throws an exception. If the user is not an attendee of the event throws an exception.
     *
     * Create a request for the method "event.finish".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link Finish#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Finish finish(java.lang.Integer id) throws java.io.IOException {
      Finish result = new Finish(id);
      initialize(result);
      return result;
    }

    public class Finish extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage> {

      private static final String REST_PATH = "event/{id}/finish";

      /**
       * Mark an event as finished and set the actual end time as right now. If there is not a logged in
       * user throws an exception. If the user is not an attendee of the event throws an exception.
       *
       * Create a request for the method "event.finish".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link Finish#execute()} method to invoke the remote operation.
       * <p> {@link
       * Finish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Finish(java.lang.Integer id) {
        super(Gentlemeet.this, "POST", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Finish setAlt(java.lang.String alt) {
        return (Finish) super.setAlt(alt);
      }

      @Override
      public Finish setFields(java.lang.String fields) {
        return (Finish) super.setFields(fields);
      }

      @Override
      public Finish setKey(java.lang.String key) {
        return (Finish) super.setKey(key);
      }

      @Override
      public Finish setOauthToken(java.lang.String oauthToken) {
        return (Finish) super.setOauthToken(oauthToken);
      }

      @Override
      public Finish setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Finish) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Finish setQuotaUser(java.lang.String quotaUser) {
        return (Finish) super.setQuotaUser(quotaUser);
      }

      @Override
      public Finish setUserIp(java.lang.String userIp) {
        return (Finish) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public Finish setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public Finish set(String parameterName, Object value) {
        return (Finish) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Events collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Events.List request = gentlemeet.events().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Events events() {
    return new Events();
  }

  /**
   * The "events" collection of methods.
   */
  public class Events {

    /**
     * Checks a user in a meeting. If there is not a logged in user throws an exception. If the event
     * doesn't exists throws an exception. If the user is already checked in throws an exception.
     *
     * Create a request for the method "events.checkIn".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link CheckIn#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public CheckIn checkIn(java.lang.Integer id) throws java.io.IOException {
      CheckIn result = new CheckIn(id);
      initialize(result);
      return result;
    }

    public class CheckIn extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesCheckInOutMessage> {

      private static final String REST_PATH = "events/{id}/checkIn";

      /**
       * Checks a user in a meeting. If there is not a logged in user throws an exception. If the event
       * doesn't exists throws an exception. If the user is already checked in throws an exception.
       *
       * Create a request for the method "events.checkIn".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link CheckIn#execute()} method to invoke the remote operation.
       * <p> {@link
       * CheckIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected CheckIn(java.lang.Integer id) {
        super(Gentlemeet.this, "POST", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesCheckInOutMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public CheckIn setAlt(java.lang.String alt) {
        return (CheckIn) super.setAlt(alt);
      }

      @Override
      public CheckIn setFields(java.lang.String fields) {
        return (CheckIn) super.setFields(fields);
      }

      @Override
      public CheckIn setKey(java.lang.String key) {
        return (CheckIn) super.setKey(key);
      }

      @Override
      public CheckIn setOauthToken(java.lang.String oauthToken) {
        return (CheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public CheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CheckIn setQuotaUser(java.lang.String quotaUser) {
        return (CheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public CheckIn setUserIp(java.lang.String userIp) {
        return (CheckIn) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public CheckIn setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public CheckIn set(String parameterName, Object value) {
        return (CheckIn) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Resource collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Resource.List request = gentlemeet.resource().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Resource resource() {
    return new Resource();
  }

  /**
   * The "resource" collection of methods.
   */
  public class Resource {

    /**
     * Retrieves the current event that is taking place at this moment in the resource. If the resource
     * doesn't exists throws an exception. If there is no event happening right now throws an exception.
     * If calendar access is not granted throws an exception.
     *
     * Create a request for the method "resource.eventCurrent".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link EventCurrent#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public EventCurrent eventCurrent(java.lang.Integer id) throws java.io.IOException {
      EventCurrent result = new EventCurrent(id);
      initialize(result);
      return result;
    }

    public class EventCurrent extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage> {

      private static final String REST_PATH = "resource/{id}/events/current";

      /**
       * Retrieves the current event that is taking place at this moment in the resource. If the
       * resource doesn't exists throws an exception. If there is no event happening right now throws an
       * exception. If calendar access is not granted throws an exception.
       *
       * Create a request for the method "resource.eventCurrent".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link EventCurrent#execute()} method to invoke the remote
       * operation. <p> {@link
       * EventCurrent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected EventCurrent(java.lang.Integer id) {
        super(Gentlemeet.this, "GET", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public EventCurrent setAlt(java.lang.String alt) {
        return (EventCurrent) super.setAlt(alt);
      }

      @Override
      public EventCurrent setFields(java.lang.String fields) {
        return (EventCurrent) super.setFields(fields);
      }

      @Override
      public EventCurrent setKey(java.lang.String key) {
        return (EventCurrent) super.setKey(key);
      }

      @Override
      public EventCurrent setOauthToken(java.lang.String oauthToken) {
        return (EventCurrent) super.setOauthToken(oauthToken);
      }

      @Override
      public EventCurrent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EventCurrent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EventCurrent setQuotaUser(java.lang.String quotaUser) {
        return (EventCurrent) super.setQuotaUser(quotaUser);
      }

      @Override
      public EventCurrent setUserIp(java.lang.String userIp) {
        return (EventCurrent) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public EventCurrent setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public EventCurrent set(String parameterName, Object value) {
        return (EventCurrent) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of events that are taking place in a resource during the day. If the resource
     * doesn't exists throws an exception.
     *
     * Create a request for the method "resource.eventsToday".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link EventsToday#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public EventsToday eventsToday(java.lang.Integer id) throws java.io.IOException {
      EventsToday result = new EventsToday(id);
      initialize(result);
      return result;
    }

    public class EventsToday extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventsResponseMessage> {

      private static final String REST_PATH = "resource/{id}/events/today";

      /**
       * Retrieves the list of events that are taking place in a resource during the day. If the
       * resource doesn't exists throws an exception.
       *
       * Create a request for the method "resource.eventsToday".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link EventsToday#execute()} method to invoke the remote
       * operation. <p> {@link
       * EventsToday#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected EventsToday(java.lang.Integer id) {
        super(Gentlemeet.this, "GET", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventsResponseMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public EventsToday setAlt(java.lang.String alt) {
        return (EventsToday) super.setAlt(alt);
      }

      @Override
      public EventsToday setFields(java.lang.String fields) {
        return (EventsToday) super.setFields(fields);
      }

      @Override
      public EventsToday setKey(java.lang.String key) {
        return (EventsToday) super.setKey(key);
      }

      @Override
      public EventsToday setOauthToken(java.lang.String oauthToken) {
        return (EventsToday) super.setOauthToken(oauthToken);
      }

      @Override
      public EventsToday setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EventsToday) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EventsToday setQuotaUser(java.lang.String quotaUser) {
        return (EventsToday) super.setQuotaUser(quotaUser);
      }

      @Override
      public EventsToday setUserIp(java.lang.String userIp) {
        return (EventsToday) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public EventsToday setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public EventsToday set(String parameterName, Object value) {
        return (EventsToday) super.set(parameterName, value);
      }
    }
    /**
     * Let a user book a resource in the moment, create a calendar event and checks the user in. If the
     * resource doesn't exists throws an exception. If there is an event happening throws an exception.
     *
     * Create a request for the method "resource.quickAdd".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link QuickAdd#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public QuickAdd quickAdd(java.lang.Integer id) throws java.io.IOException {
      QuickAdd result = new QuickAdd(id);
      initialize(result);
      return result;
    }

    public class QuickAdd extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage> {

      private static final String REST_PATH = "resource/{id}/events/quickAdd";

      /**
       * Let a user book a resource in the moment, create a calendar event and checks the user in. If
       * the resource doesn't exists throws an exception. If there is an event happening throws an
       * exception.
       *
       * Create a request for the method "resource.quickAdd".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link QuickAdd#execute()} method to invoke the remote operation.
       * <p> {@link
       * QuickAdd#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected QuickAdd(java.lang.Integer id) {
        super(Gentlemeet.this, "POST", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ArduxApiMessagesEventMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public QuickAdd setAlt(java.lang.String alt) {
        return (QuickAdd) super.setAlt(alt);
      }

      @Override
      public QuickAdd setFields(java.lang.String fields) {
        return (QuickAdd) super.setFields(fields);
      }

      @Override
      public QuickAdd setKey(java.lang.String key) {
        return (QuickAdd) super.setKey(key);
      }

      @Override
      public QuickAdd setOauthToken(java.lang.String oauthToken) {
        return (QuickAdd) super.setOauthToken(oauthToken);
      }

      @Override
      public QuickAdd setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (QuickAdd) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public QuickAdd setQuotaUser(java.lang.String quotaUser) {
        return (QuickAdd) super.setQuotaUser(quotaUser);
      }

      @Override
      public QuickAdd setUserIp(java.lang.String userIp) {
        return (QuickAdd) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public QuickAdd setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public QuickAdd set(String parameterName, Object value) {
        return (QuickAdd) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Resources collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Gentlemeet gentlemeet = new Gentlemeet(...);}
   *   {@code Gentlemeet.Resources.List request = gentlemeet.resources().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Resources resources() {
    return new Resources();
  }

  /**
   * The "resources" collection of methods.
   */
  public class Resources {

    /**
     * Create a request for the method "resources.list".
     *
     * This request holds the parameters needed by the gentlemeet server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GentlemeetRequest<com.appspot.www_ardux.gentlemeet.model.ResourceCalendarCollection> {

      private static final String REST_PATH = "resources";

      /**
       * Create a request for the method "resources.list".
       *
       * This request holds the parameters needed by the the gentlemeet server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Gentlemeet.this, "GET", REST_PATH, null, com.appspot.www_ardux.gentlemeet.model.ResourceCalendarCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /**

       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long limit;

      /**

       */
      public java.lang.Long getLimit() {
        return limit;
      }

      public List setLimit(java.lang.Long limit) {
        this.limit = limit;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String order;

      /**

       */
      public java.lang.String getOrder() {
        return order;
      }

      public List setOrder(java.lang.String order) {
        this.order = order;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Gentlemeet}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Gentlemeet}. */
    @Override
    public Gentlemeet build() {
      return new Gentlemeet(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GentlemeetRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGentlemeetRequestInitializer(
        GentlemeetRequestInitializer gentlemeetRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(gentlemeetRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
